#!/usr/bin/env python

import boto3
import time
from functools import partial


def assume_role(account_id, session_prefix, **kwargs):
    """
    Create a partially applied session to assume a role with an external id.
    A unique session_name will be generated by {session_prefix}_{time}
    `session` can be passed, otherwise the default session will be used
    see: http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-api.html
    """
    role_arn = 'arn:aws:iam::{}:role/ManagementAccountAccessRole'.format(account_id)

    sts = boto3.client('sts')
    res = sts.assume_role(
        RoleArn=role_arn,
        RoleSessionName='{}_{}'.format(session_prefix, int(time.time())),
        **kwargs
    )
    creds = res['Credentials']
    return partial(boto3.session.Session,
                   aws_access_key_id=creds['AccessKeyId'],
                   aws_secret_access_key=creds['SecretAccessKey'],
                   aws_session_token=creds['SessionToken']
                   )
